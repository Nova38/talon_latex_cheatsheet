Command	Result
{ dunder in it }	{ Insert "\_\_init\_\_".  }
{ state (def | deaf | deft) }	{ Insert "def ".  }
{ state try }	{ Insert "try:\textbackslashn".  }
{ state except }	{ Insert "except ".  }
{ state raise }	{ Insert "raise ".  }
{ self taught }	{ Insert "self.".  }
{ pie test }	{ Insert "pytest".  }
{ state past }	{ Insert "pass".  }
{ raise \{user.python{-}exception\} }	{ Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines..  }
{ except \{user.python{-}exception\} }	{ Insert "except  $<$python\_exception$>$ :".  }
{ dock string }	{ Inserts a document comment and positions the cursor appropriately.  }
{ dock \{user.python{-}docstring{-}fields\} }	{ Insert "$<$python\_docstring\_fields$>$". Move cursor left one column.  }
{ dock type \{user.code{-}type\} }	{ Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines..  }
{ dock returns type \{user.code{-}type\} }	{ Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines..  }
{ toggle imports }	{ GUI: List libraries for active language.  }
{ import $<$user.code{-}libraries$>$ }	{ Inserts a library and positions the cursor appropriately. Press end enter.  }
{ from import }	{ Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines..  }
